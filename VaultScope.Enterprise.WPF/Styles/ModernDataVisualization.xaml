<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- MODERN TABLE STYLES -->

    <!-- DATA GRID STYLE -->
    <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource BackgroundTertiaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
    </Style>

    <!-- DATA GRID COLUMN HEADER STYLE -->
    <Style x:Key="ModernDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource BackgroundElevatedBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderMediumBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeS}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Border Name="BackgroundBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <ContentPresenter Grid.Column="0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            
                            <Path Grid.Column="1"
                                  Name="SortArrow"
                                  Visibility="Collapsed"
                                  Data="M 0,0 L 1,0 0.5,1 z"
                                  Stretch="Fill"
                                  Width="8" Height="6"
                                  Fill="{DynamicResource PurplePrimaryBrush}"
                                  Margin="8,0,0,0"/>
                        </Grid>
                        
                        <Thumb Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{DynamicResource ColumnHeaderGripperStyle}"/>
                        <Thumb Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{DynamicResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource BackgroundTertiaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COLUMN HEADER GRIPPER STYLE -->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="Thumb">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DATA GRID ROW STYLE -->
    <Style x:Key="ModernDataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
        <Setter Property="MinHeight" Value="48"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PurplePrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundElevatedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DATA GRID CELL STYLE -->
    <Style x:Key="ModernDataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- SEVERITY INDICATOR STYLES -->
    <Style x:Key="SeverityDotStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- SEVERITY COLORS -->
    <SolidColorBrush x:Key="CriticalSeverityBrush" Color="#DC2626"/>
    <SolidColorBrush x:Key="HighSeverityBrush" Color="#EA580C"/>
    <SolidColorBrush x:Key="MediumSeverityBrush" Color="#D97706"/>
    <SolidColorBrush x:Key="LowSeverityBrush" Color="#65A30D"/>
    <SolidColorBrush x:Key="InfoSeverityBrush" Color="#2563EB"/>

    <!-- PROGRESS BAR STYLES -->
    <Style x:Key="ModernProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource BackgroundTertiaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PurpleGradientBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <Grid x:Name="PART_Track">
                            <Border Name="PART_Indicator"
                                    Background="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Left"
                                    CornerRadius="4"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- LARGE PROGRESS BAR STYLE -->
    <Style x:Key="ModernLargeProgressBarStyle" TargetType="ProgressBar" BasedOn="{StaticResource ModernProgressBarStyle}">
        <Setter Property="Height" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="6">
                        <Grid x:Name="PART_Track">
                            <Border Name="PART_Indicator"
                                    Background="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Left"
                                    CornerRadius="6"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PROGRESS TEXT STYLE -->
    <Style x:Key="ProgressTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeS}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>

    <!-- CHART STYLES -->
    <Style x:Key="ChartContainerStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{DynamicResource CornerRadiusL}"/>
        <Setter Property="Padding" Value="{DynamicResource SpacingL}"/>
        <Setter Property="Margin" Value="{DynamicResource SpacingM}"/>
    </Style>

    <!-- STATUS BADGE STYLES -->
    <Style x:Key="StatusBadgeStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="SuccessStatusBadgeStyle" TargetType="Border" BasedOn="{StaticResource StatusBadgeStyle}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
    </Style>

    <Style x:Key="WarningStatusBadgeStyle" TargetType="Border" BasedOn="{StaticResource StatusBadgeStyle}">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}"/>
    </Style>

    <Style x:Key="ErrorStatusBadgeStyle" TargetType="Border" BasedOn="{StaticResource StatusBadgeStyle}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
    </Style>

    <Style x:Key="InfoStatusBadgeStyle" TargetType="Border" BasedOn="{StaticResource StatusBadgeStyle}">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}"/>
    </Style>

    <!-- STATUS BADGE TEXT STYLE -->
    <Style x:Key="StatusBadgeTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeXS}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <!-- LIST VIEW STYLES -->
    <Style x:Key="ModernListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <!-- LIST VIEW ITEM STYLE -->
    <Style x:Key="ModernListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PurplePrimaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundElevatedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PAGINATION STYLES -->
    <Style x:Key="PaginationButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundElevatedBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeS}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="MinWidth" Value="36"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadiusM}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PurplePrimaryBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PurpleAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundTertiaryBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CURRENT PAGE BUTTON STYLE -->
    <Style x:Key="CurrentPageButtonStyle" TargetType="Button" BasedOn="{StaticResource PaginationButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PurplePrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
    </Style>

    <!-- LOADING SPINNER STYLE -->
    <Style x:Key="LoadingSpinnerStyle" TargetType="Border">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                                             From="0" To="360" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>