<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- MODERN GLASS CARD STYLE -->
    <Style x:Key="ModernGlassCard" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource GlassGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderGlassBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{DynamicResource CornerRadiusL}"/>
        <Setter Property="Padding" Value="{DynamicResource SpacingL}"/>
        <Setter Property="Effect" Value="{DynamicResource ElevationMedium}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.02" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.02" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- INTERACTIVE GLASS CARD -->
    <Style x:Key="InteractiveGlassCard" TargetType="Border" BasedOn="{StaticResource ModernGlassCard}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
                <Setter Property="Effect" Value="{DynamicResource GlowPurple}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.05" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.05" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- MODERN GLASS BUTTON -->
    <Style x:Key="ModernGlassButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource GlassGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderGlassBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="{DynamicResource SpacingL}"/>
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadiusM}"
                            Effect="{DynamicResource ElevationLow}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
                            <Setter TargetName="Border" Property="Effect" Value="{DynamicResource ElevationMedium}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{DynamicResource ElevationLow}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.05" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.05" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="0.95" Duration="0:0:0.1"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="0.95" Duration="0:0:0.1"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- PRIMARY GLASS BUTTON -->
    <Style x:Key="PrimaryGlassButton" TargetType="Button" BasedOn="{StaticResource ModernGlassButton}">
        <Setter Property="Background" Value="{DynamicResource PurpleGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Effect" Value="{DynamicResource GlowPurple}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{DynamicResource ElevationHigh}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- MODERN SIDEBAR BUTTON -->
    <Style x:Key="ModernSidebarButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Padding" Value="{DynamicResource SpacingM}"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadiusM}"
                            Margin="4,2">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GlassGradientBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderGlassBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PurpleGradientBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.02" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.02" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationFast}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ACTIVE SIDEBAR BUTTON -->
    <Style x:Key="ActiveSidebarButton" TargetType="Button" BasedOn="{StaticResource ModernSidebarButton}">
        <Setter Property="Background" Value="{DynamicResource PurpleGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Effect" Value="{DynamicResource GlowPurple}"/>
    </Style>
    
    <!-- MODERN TEXT INPUT -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource GlassGradientBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderGlassBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeM}"/>
        <Setter Property="Padding" Value="{DynamicResource SpacingM}"/>
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadiusM}"
                            Effect="{DynamicResource ElevationLow}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PurplePrimaryBrush}"/>
                            <Setter TargetName="Border" Property="Effect" Value="{DynamicResource GlowPurple}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PurpleAccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- MODERN SCROLL VIEWER -->
    <Style x:Key="ModernScrollViewer" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>
                        
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1" Grid.Row="0"
                                   Style="{DynamicResource ModernScrollBar}"
                                   Orientation="Vertical"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                        
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="0" Grid.Row="1"
                                   Style="{DynamicResource ModernScrollBar}"
                                   Orientation="Horizontal"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- MODERN SCROLL BAR -->
    <Style x:Key="ModernScrollBar" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Track x:Name="PART_Track" IsDirectionReversed="True" Width="8">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Background" Value="{DynamicResource BorderMediumBrush}"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Border Background="{TemplateBinding Background}"
                                                                CornerRadius="4"
                                                                Width="6"
                                                                Margin="1"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource PurplePrimaryBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- FOCUS VISUAL STYLE -->
    <Style x:Key="ModernFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="2" 
                               Stroke="{DynamicResource PurplePrimaryBrush}" 
                               StrokeDashArray="1 2" 
                               SnapsToDevicePixels="True"
                               RadiusX="16"
                               RadiusY="16"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- MODERN THEME SELECTOR CONTAINER -->
    <Style x:Key="ThemeSelectorContainer" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource GlassBackground}" Offset="0"/>
                    <GradientStop Color="#15FFFFFF" Offset="0.5"/>
                    <GradientStop Color="{DynamicResource GlassBackground}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#40FFFFFF" Offset="0"/>
                    <GradientStop Color="{DynamicResource BorderGlass}" Offset="0.5"/>
                    <GradientStop Color="#40FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{DynamicResource CornerRadiusXXL}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource GlassShadow}" 
                                  Direction="270" 
                                  ShadowDepth="4" 
                                  BlurRadius="20" 
                                  Opacity="0.3"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1.05" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1.05" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseBack}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                             To="1" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                             To="1" Duration="{DynamicResource AnimationNormal}"
                                             EasingFunction="{DynamicResource EaseOut}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- MODERN THEME BUTTON STYLE -->
    <Style x:Key="ModernThemeButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <RotateTransform Angle="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource CornerRadiusXL}"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="BorderScale" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                        
                        <Grid>
                            <!-- Glowing Inner Border -->
                            <Border x:Name="InnerGlow"
                                    Background="Transparent"
                                    BorderBrush="#00FFFFFF"
                                    BorderThickness="2"
                                    CornerRadius="{DynamicResource CornerRadiusXL}"
                                    Opacity="0"/>
                            
                            <ContentPresenter x:Name="ContentPresenter"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.15" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseBack}"/>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.15" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseBack}"/>
                                        <ColorAnimation Storyboard.TargetName="InnerGlow"
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="#60FFFFFF" Duration="{DynamicResource AnimationFast}"/>
                                        <DoubleAnimation Storyboard.TargetName="InnerGlow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="{DynamicResource AnimationFast}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseOut}"/>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseOut}"/>
                                        <DoubleAnimation Storyboard.TargetName="InnerGlow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="{DynamicResource AnimationFast}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="0.9" Duration="0:0:0.08"
                                                         EasingFunction="{DynamicResource EaseOut}"/>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="0.9" Duration="0:0:0.08"
                                                         EasingFunction="{DynamicResource EaseOut}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.15" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseBounce}"/>
                                        <DoubleAnimation Storyboard.TargetName="BorderScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.15" Duration="{DynamicResource AnimationFast}"
                                                         EasingFunction="{DynamicResource EaseBounce}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)"
                                         From="0" To="360" Duration="0:0:0.6"
                                         EasingFunction="{DynamicResource EaseElastic}"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         From="0" To="1" Duration="0:0:0.4"
                                         EasingFunction="{DynamicResource EaseOut}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- ACTIVE THEME BUTTON STYLE -->
    <Style x:Key="ActiveThemeButton" TargetType="Button" BasedOn="{StaticResource ModernThemeButton}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush Center="0.5,0.3" RadiusX="1.2" RadiusY="1.2">
                    <GradientStop Color="{DynamicResource PurplePrimary}" Offset="0"/>
                    <GradientStop Color="{DynamicResource PurpleAccent}" Offset="0.7"/>
                    <GradientStop Color="{DynamicResource PurpleDark}" Offset="1"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#80FFFFFF" Offset="0"/>
                    <GradientStop Color="{DynamicResource PurplePrimary}" Offset="0.5"/>
                    <GradientStop Color="#80FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource PurpleGlow}" 
                                  Direction="270" 
                                  ShadowDepth="0" 
                                  BlurRadius="25" 
                                  Opacity="0.8"/>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)"
                                         From="20" To="35" Duration="0:0:2"
                                         EasingFunction="{DynamicResource EaseInOut}"
                                         AutoReverse="True"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)"
                                         From="0.6" To="1" Duration="0:0:2"
                                         EasingFunction="{DynamicResource EaseInOut}"
                                         AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>