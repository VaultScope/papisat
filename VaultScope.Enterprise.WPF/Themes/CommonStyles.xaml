<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Base Text Styles -->
    <Style x:Key="BaseTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>

    <!-- Typography Styles -->
    <Style x:Key="HeadlineStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text49}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="LineHeight" Value="60"/>
    </Style>

    <Style x:Key="TitleStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text37}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="LineHeight" Value="44"/>
    </Style>

    <Style x:Key="SubtitleStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text28}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="LineHeight" Value="36"/>
    </Style>

    <Style x:Key="BodyLargeStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text21}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="32"/>
    </Style>

    <Style x:Key="BodyStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text16}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style x:Key="BodySmallStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text14}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <Style x:Key="CaptionStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource Text12}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
    </Style>

    <Style x:Key="MonospaceStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceFont}"/>
        <Setter Property="FontSize" Value="{DynamicResource Text14}"/>
    </Style>

    <!-- Secondary Text Styles -->
    <Style x:Key="SecondaryTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
    </Style>

    <Style x:Key="TertiaryTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TextTertiaryBrush}"/>
    </Style>

    <!-- Common Animation Storyboards -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="{DynamicResource NormalDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="FadeOutAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="1" To="0" 
                         Duration="{DynamicResource NormalDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="SlideInFromLeftAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                         From="-100" To="0" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="SlideInFromRightAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                         From="100" To="0" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="ScaleInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         From="0.8" To="1" 
                         Duration="{DynamicResource NormalDuration}"
                         EasingFunction="{DynamicResource BackEaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         From="0.8" To="1" 
                         Duration="{DynamicResource NormalDuration}"
                         EasingFunction="{DynamicResource BackEaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="{DynamicResource NormalDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <!-- Hover Scale Animation -->
    <Storyboard x:Key="HoverScaleUpAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1.02" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1.02" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="HoverScaleDownAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <!-- Page Transition Animations -->
    <Storyboard x:Key="PageTransitionOut">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="1" To="0" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                         From="0" To="-50" 
                         Duration="{DynamicResource FastDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <Storyboard x:Key="PageTransitionIn">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                         From="50" To="0" 
                         Duration="{DynamicResource SlowDuration}"
                         EasingFunction="{DynamicResource EaseOut}"/>
    </Storyboard>

    <!-- Common Styles -->
    <Style x:Key="InteractiveElementStyle" TargetType="FrameworkElement">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{DynamicResource HoverScaleUpAnimation}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{DynamicResource HoverScaleDownAnimation}"/>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Page Content Style -->
    <Style x:Key="PageContentStyle" TargetType="UserControl">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform/>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsLoaded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{DynamicResource PageTransitionIn}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Scrollbar Styles -->
    <Style x:Key="ModernScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Track x:Name="PART_Track" 
                               IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Background="{DynamicResource TextTertiaryBrush}" 
                                       BorderBrush="Transparent" 
                                       BorderThickness="0">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="{TemplateBinding Background}" 
                                                    CornerRadius="6" 
                                                    Margin="2"
                                                    Opacity="0.5">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Opacity" Value="0.8"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                Grid.Row="0" Grid.Column="0" 
                                                Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Grid.Row="0" Grid.Column="1" 
                                   Style="{DynamicResource ModernScrollBarStyle}" 
                                   Orientation="Vertical" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Value="{TemplateBinding VerticalOffset}" 
                                   Width="12"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>